import "Srl/Console";
use Srl;

func countSetBits(num: Word): Int {
    def count: Int = 0;
    while num != 0 {
        count += num & 1;
        num >>= 1;
    }
    return count;
}

func findMax(a: Int, b: Int): Int {
    def diff: Int = a - b;
    def sign: Int = (diff >> 31) & 0x1;

    return a - diff * sign;
}

func swap(a: ref[Int], b: ref[Int]) {
    a $= b;
    b $= a;
    a $= b;
}

def num: Word = 142;
def num_set_bits: Int;
num_set_bits = countSetBits(num);
Console.print("number of set bits in %u: %d\n", num, num_set_bits);

def x: Int = 25;
def y: Int = 38;

def max_val: Int;
max_val = findMax(x, y);
Console.print("maximun of %d and %d: %d\n", x, y, max_val);

def num1: Int = 10;
def num2: Int = 20;
Console.print("before swap: num1 = %d, num2 = %d\n", num1, num2);
swap(num1,  num2);
Console.print("after swap: num1 = %d, num2 = %d\n", num1, num2);
